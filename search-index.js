var searchIndex = JSON.parse('{\
"auxtest":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"auxtools":{"doc":"For when BYOND is not enough. Probably often.","t":[0,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,11,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,7,7,0,3,12,3,3,12,12,12,12,12,0,3,3,3,3,8,10,3,12,12,3,12,12,3,12,12,3,12,12,3,12,3,12,19,12,12,12,19,12,12,12,3,12,11,11,5,5,5,5,0,3,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,3,12,12,12,0,3,12,11,3,12,3,12,12,12,12,12,12,12,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,19,12,12,12,12,3,12,12,0,3,12,12,0,3,14,23,23,23,23,3,3,12,12,12,6,3,12,3,12,3,12,17,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["debug","StackFrame","context","instance","proc","offset","usr","src","dot","args","locals","file_name","line_number","CallStacks","active","suspended","new","raw_types","funcs","call_proc_by_id_byond","call_datum_proc_by_name_byond","get_proc_array_entry_byond","get_string_id_byond","get_variable_byond","set_variable_byond","get_string_table_entry_byond","inc_ref_count_byond","dec_ref_count_byond","get_assoc_element_byond","set_assoc_element_byond","create_list_byond","append_to_list_byond","remove_from_list_byond","get_length_byond","get_misc_by_id_byond","to_string_byond","runtime_byond","call_proc_by_id","call_datum_proc_by_name","get_proc_array_entry","get_string_id","get_variable","set_variable","get_string_table_entry","inc_ref_count","dec_ref_count","get_assoc_element","set_assoc_element","create_list","append_to_list","remove_from_list","get_length","get_misc_by_id","to_string","CURRENT_EXECUTION_CONTEXT","SUSPENDED_PROCS_BUFFER","SUSPENDED_PROCS","VARIABLE_NAMES","lists","ListId","0","AssociativeListEntry","List","vector_part","assoc_part","allocated","length","refcount","misc","MiscId","BytecodeId","LocalsId","ParametersId","AsMiscId","as_misc_id","Bytecode_V1","count","bytecode","Bytecode_V2","count","bytecode","Locals_V1","count","names","Locals_V2","count","names","Parameters_V1","data","Parameters_V2","data","Misc_V1","bytecode","locals","parameters","Misc_V2","bytecode","locals","parameters","ParametersData","name","count","count","set_bytecode","get_bytecode","get_locals","get_parameters","procs","ProcId","0","ProcEntry","path","name","desc","category","bytecode","locals","parameters","ProcInstance","proc","flags","mega_hack","usr","src","context","args_count","args","time_to_resume","ExecutionContext","proc_instance","parent_context","filename","line","bytecode","bytecode_offset","dot","locals","locals_count","SuspendedProcsBuffer","buffer","SuspendedProcs","front","back","capacity","strings","StringId","0","valid","VariableId","0","StringEntry","data","this","left","right","ref_count","unk_1","unk_2","values","ValueTag","Null","Turf","Obj","Mob","Area","Client","String","MobTypepath","ObjTypepath","TurfTypepath","AreaTypepath","Resource","Image","World","List","MobVars","ObjVars","TurfVars","AreaVars","ClientVars","Vars","MobOverlays","MobUnderlays","ObjOverlays","ObjUnderlays","TurfOverlays","TurfUnderlays","AreaOverlays","AreaUnderlays","ImageVars","WorldVars","GlobalVars","Datum","SaveFile","Number","Appearance","ValueData","string","number","id","list","Value","tag","data","variables","VariableNameIdTable","entries","count","sigscan","Scanner","convert_signature","hook","init","runtime_handler","shutdown","List","Proc","id","entry","path","DMResult","Runtime","message","StringRef","value","Value","raw","BYONDCORE","byond_ffi_fn","runtime","signature","signatures","byond_string","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","as_misc_id","as_misc_id","as_misc_id","drop","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","from_iter","hook","from_value","new","with_size","get","set","append","remove","len","is_list","find","find_override","from_id","parameter_names","local_names","set_bytecode","bytecode_mut_ptr","bytecode","call","override_id","new","for_module","find","new","from_raw","from_value","from_id","from_variable_id","get_id","data","new","globals","world","null","turf_by_id_unchecked","turf_by_id","turf","get","get_number","get_string","get_list","set","as_number","as_string","as_list","call","to_dmstring","to_string","get_type","is_exact_type","is_truthy","from_string","from_string_raw","from_raw","from_raw_owned"],"q":["auxtools","auxtools::debug","","","","","","","","","","","","","","","","auxtools","auxtools::raw_types","auxtools::raw_types::funcs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types","auxtools::raw_types::lists","","","","","","","","","auxtools::raw_types","auxtools::raw_types::misc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types","auxtools::raw_types::procs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types","auxtools::raw_types::strings","","","","","","","","","","","","","auxtools::raw_types","auxtools::raw_types::values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types","auxtools::raw_types::variables","","","auxtools","auxtools::sigscan","","auxtools","","","","","","","","","","","","","","","","","","","","","","auxtools::debug","","","","","","","","","","","","","","auxtools","","","","","","","","","","","","","","","","auxtools::raw_types::lists","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::misc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::procs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::strings","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::variables","","","","","","","auxtools","","","","","","","auxtools::sigscan","","","","","","","auxtools","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::misc","","","auxtools","","","","","","","","","","","","auxtools::raw_types::lists","auxtools::raw_types::misc","","","","","","","","","","","","auxtools::raw_types::procs","auxtools::raw_types::strings","","auxtools::raw_types::values","","","auxtools","","auxtools::raw_types::misc","","","","","","","","auxtools::raw_types::procs","","auxtools::raw_types::values","auxtools","","auxtools::raw_types::lists","auxtools::raw_types::strings","","","auxtools::raw_types::values","","auxtools","","","auxtools::raw_types::values","","auxtools","","auxtools::raw_types::misc","","","","auxtools::raw_types::procs","auxtools::raw_types::values","auxtools","","","","","","","","","","","","","","","","","","","","","","","auxtools::sigscan","","auxtools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"dnternal thing used when interfacing with BYOND. You …","","","","","","","","","","The <code>hook</code> attribute is used to define functions that may …","","","","A wrapper around Values that make working with lists a …","Used to hook and call procs.","","","","","Represents a byond runtime, sort of. This will probably …","","A wrapper around Values that make working with strings a …","","<code>Value</code> represents any value a DM variable can hold, such …","","","Creates a normal byond ffi function that can be called in …","This macro makes instantiating Runtimes a (little bit) …reates a new empty list.","Creates a new list filled with <code>capacity</code> nulls.","","","","","","","Finds the first proc with the given path","Finds the n’th re-defined proc with the given path","","","","","","","Calls a global proc with the given arguments.","","","","","","","","","","","","Creates a new value from raw tag and data. Use if you …","Equivalent to DM’s <code>global.vars</code>.","Equivalent to DM’s <code>world</code>.","Equivalent to DM’s <code>null</code>.","Gets a turf by ID, without bounds checking. Use …","Gets a turf by ID, with bounds checking.","Gets a turf by coordinates.","Gets a variable by name.","Gets a variable by name and safely casts it to a float.","Gets a variable by name and safely casts it to a string.","Gets a variable by name and safely casts it to a […","Sets a variable by name to a given value.","Check if the current value is a number and casts it.","Check if the current value is a string and casts it.","Check if the current value is a list and casts it.","Calls a method of the value with the given arguments.","","","Gets the type of the Value as a string","Checks whether this Value’s type is equal to <code>typepath</code>.","","Creates a Value that references a byond string. Will …","","blah blah lifetime is not verified with this so use at …","same as from_raw but does not increment the reference …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,4,4,4,4,4,0,0,0,0,0,0,5,0,6,6,0,7,7,0,8,8,0,9,9,0,10,0,11,0,12,12,12,0,13,13,13,0,14,10,11,0,0,0,0,0,0,15,0,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,0,19,0,20,20,20,0,0,21,21,0,22,0,23,23,23,23,23,23,23,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,0,26,26,0,0,27,27,0,0,0,0,0,0,0,0,0,28,28,28,0,0,29,0,30,0,31,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,32,32,32,32,32,32,32,28,28,28,28,28,28,28,28,28,3,3,3,3,3,3,3,3,3,33,33,33,33,33,33,33,4,4,4,4,4,4,4,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,29,29,29,29,29,29,29,38,38,38,38,38,38,38,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,35,36,37,31,31,31,30,31,31,31,31,31,31,31,28,3,34,35,36,37,6,7,8,9,10,11,12,13,15,21,22,24,25,26,30,31,34,34,35,35,36,36,37,37,15,15,24,31,28,3,21,22,23,24,26,29,30,31,26,24,30,31,34,35,36,37,15,24,31,32,28,32,32,32,32,32,32,32,32,32,28,28,28,28,28,28,28,28,28,28,29,38,38,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["callstacks",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["miscid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[["u16",15],["bytecodeid",3]]],[[["bytecodeid",3]]],[[["localsid",3]]],[[["parametersid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["miscid",3]],[[],["miscid",3]],[[],["miscid",3]],[[]],[[["list",3]]],[[["list",3]]],[[["stringref",3]],["stringref",3]],[[["stringref",3]]],[[["stringref",3]]],[[["f32",15]]],[[["i32",15]]],[[["u32",15]]],[[["bool",15]]],[[["value",3]]],[[],["proc",3]],[[],["listid",3]],[[],["miscid",3]],[[],["bytecodeid",3]],[[],["localsid",3]],[[],["parametersid",3]],[[],["bytecode_v1",3]],[[],["bytecode_v2",3]],[[],["locals_v1",3]],[[],["locals_v2",3]],[[],["parameters_v1",3]],[[],["parameters_v2",3]],[[],["misc_v1",19]],[[],["misc_v2",19]],[[],["procid",3]],[[],["stringid",3]],[[],["variableid",3]],[[],["valuetag",4]],[[],["valuedata",19]],[[],["value",3]],[[]],[[],["value",3]],[[["miscid",3]],["bool",15]],[[["miscid",3]],["bool",15]],[[["bytecodeid",3]],["bool",15]],[[["bytecodeid",3]],["bool",15]],[[["localsid",3]],["bool",15]],[[["localsid",3]],["bool",15]],[[["parametersid",3]],["bool",15]],[[["parametersid",3]],["bool",15]],[[["procid",3]],["bool",15]],[[["procid",3]],["bool",15]],[[["valuetag",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[],[["hookfailure",4],["result",4]]],[[["value",3]],["dmresult",6]],[[]],[[["u32",15]]],[[["into",8],["value",3]],["dmresult",6]],[[["into",8],["value",3]],[["runtime",3],["result",4]]],[[["into",8],["value",3]]],[[["into",8],["value",3]]],[[],["u32",15]],[[["value",3]],["bool",15]],[[["into",8],["string",3]],["option",4]],[[["into",8],["u32",15],["string",3]],["option",4]],[[["procid",3]],["option",4]],[[],[["vec",3],["stringref",3]]],[[],[["vec",3],["stringref",3]]],[[["vec",3],["u32",15]]],[[]],[[]],[[],["dmresult",6]],[[],["u32",15]],[[["into",8],["string",3]]],[[["str",15]],[["scanner",3],["option",4]]],[[],["option",4]],[[["str",15]],["dmresult",6]],[[],["dmresult",6]],[[["value",3]],["option",4]],[[["stringid",3]]],[[["variableid",3]]],[[],["stringid",3]],[[]],[[["valuedata",19],["valuetag",4]],["value",3]],[[],["value",3]],[[],["value",3]],[[],["value",3]],[[["u32",15]],["value",3]],[[["u32",15]],["dmresult",6]],[[["u32",15]],["dmresult",6]],[[["stringref",3],["into",8]],["dmresult",6]],[[["stringref",3],["into",8]],[["dmresult",6],["f32",15]]],[[["stringref",3],["into",8]],[["dmresult",6],["string",3]]],[[["stringref",3],["into",8]],[["dmresult",6],["list",3]]],[[["into",8],["stringref",3],["into",8],["value",3]],["dmresult",6]],[[],[["dmresult",6],["f32",15]]],[[],[["dmresult",6],["string",3]]],[[],[["dmresult",6],["list",3]]],[[["asref",8],["str",15]],["dmresult",6]],[[],[["stringref",3],["dmresult",6]]],[[],[["dmresult",6],["string",3]]],[[],[["result",4],["runtime",3],["string",3]]],[[["asref",8],["str",15]],["bool",15]],[[],["bool",15]],[[["asref",8],["str",15]],["dmresult",6]],[[],["dmresult",6]],[[["value",3]]],[[["value",3]],["value",3]]],"p":[[3,"StackFrame"],[3,"CallStacks"],[3,"ListId"],[3,"List"],[8,"AsMiscId"],[3,"Bytecode_V1"],[3,"Bytecode_V2"],[3,"Locals_V1"],[3,"Locals_V2"],[3,"Parameters_V1"],[3,"Parameters_V2"],[19,"Misc_V1"],[19,"Misc_V2"],[3,"ParametersData"],[3,"ProcId"],[3,"ProcEntry"],[3,"ProcInstance"],[3,"ExecutionContext"],[3,"SuspendedProcsBuffer"],[3,"SuspendedProcs"],[3,"StringId"],[3,"VariableId"],[3,"StringEntry"],[4,"ValueTag"],[19,"ValueData"],[3,"Value"],[3,"VariableNameIdTable"],[3,"Proc"],[3,"Runtime"],[3,"StringRef"],[3,"Value"],[3,"List"],[3,"AssociativeListEntry"],[3,"MiscId"],[3,"BytecodeId"],[3,"LocalsId"],[3,"ParametersId"],[3,"Scanner"]]},\
"auxtools_impl":{"doc":"","t":[14,23,23,23,23],"n":["convert_signature","init","runtime_handler","shutdown","hook"],"q":["auxtools_impl","","","",""],"d":["","","","","The <code>hook</code> attribute is used to define functions that may …"],"i":[0,0,0,0,0],"f":[null,null,null,null,null],"p":[]},\
"byond_get":{"doc":"","t":[5,5],"n":["get_zip_url","main"],"q":["byond_get",""],"d":["",""],"i":[0,0],"f":[[[["u32",15]],["url",3]],[[]]],"p":[]},\
"debug_server":{"doc":"","t":[7],"n":["DEBUG_SERVER"],"q":["debug_server"],"d":[""],"i":[0],"f":[null],"p":[]},\
"test_runner":{"doc":"","t":[0,5,5,5,5,5,5,5,8,10,5],"n":["paths","find_byond","find_byond_bin","find_dm","find_dreamdaemon","find_dll","find_dme","find_dmb","ByondCommand","with_byond_paths","main"],"q":["test_runner","test_runner::paths","","","","","","","test_runner","",""],"d":["","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,0],"f":[null,[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],null,[[]],[[]]],"p":[[8,"ByondCommand"]]}\
}');
initSearch(searchIndex);